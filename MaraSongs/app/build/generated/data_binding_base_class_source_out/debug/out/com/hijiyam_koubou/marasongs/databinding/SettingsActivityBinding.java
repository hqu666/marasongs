// Generated by view binder compiler. Do not edit!
package com.hijiyam_koubou.marasongs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hijiyam_koubou.marasongs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SettingsActivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TableLayout headAria;

  @NonNull
  public final Switch prefBtRenkei;

  @NonNull
  public final EditText prefGyapless;

  @NonNull
  public final Switch prefListSimple;

  @NonNull
  public final Button prefListupReset;

  @NonNull
  public final Switch prefLockscreen;

  @NonNull
  public final TextView prefMemo;

  @NonNull
  public final Switch prefNotifplayer;

  @NonNull
  public final Switch prefPbBgc;

  @NonNull
  public final Button prefReset;

  @NonNull
  public final EditText prefRundamListSize;

  @NonNull
  public final EditText prefSaikinSisei;

  @NonNull
  public final EditText prefSaikinTuika;

  private SettingsActivityBinding(@NonNull LinearLayout rootView, @NonNull TableLayout headAria,
      @NonNull Switch prefBtRenkei, @NonNull EditText prefGyapless, @NonNull Switch prefListSimple,
      @NonNull Button prefListupReset, @NonNull Switch prefLockscreen, @NonNull TextView prefMemo,
      @NonNull Switch prefNotifplayer, @NonNull Switch prefPbBgc, @NonNull Button prefReset,
      @NonNull EditText prefRundamListSize, @NonNull EditText prefSaikinSisei,
      @NonNull EditText prefSaikinTuika) {
    this.rootView = rootView;
    this.headAria = headAria;
    this.prefBtRenkei = prefBtRenkei;
    this.prefGyapless = prefGyapless;
    this.prefListSimple = prefListSimple;
    this.prefListupReset = prefListupReset;
    this.prefLockscreen = prefLockscreen;
    this.prefMemo = prefMemo;
    this.prefNotifplayer = prefNotifplayer;
    this.prefPbBgc = prefPbBgc;
    this.prefReset = prefReset;
    this.prefRundamListSize = prefRundamListSize;
    this.prefSaikinSisei = prefSaikinSisei;
    this.prefSaikinTuika = prefSaikinTuika;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingsActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingsActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.settings_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingsActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.headAria;
      TableLayout headAria = ViewBindings.findChildViewById(rootView, id);
      if (headAria == null) {
        break missingId;
      }

      id = R.id.pref_bt_renkei;
      Switch prefBtRenkei = ViewBindings.findChildViewById(rootView, id);
      if (prefBtRenkei == null) {
        break missingId;
      }

      id = R.id.pref_gyapless;
      EditText prefGyapless = ViewBindings.findChildViewById(rootView, id);
      if (prefGyapless == null) {
        break missingId;
      }

      id = R.id.pref_list_simple;
      Switch prefListSimple = ViewBindings.findChildViewById(rootView, id);
      if (prefListSimple == null) {
        break missingId;
      }

      id = R.id.pref_listup_reset;
      Button prefListupReset = ViewBindings.findChildViewById(rootView, id);
      if (prefListupReset == null) {
        break missingId;
      }

      id = R.id.pref_lockscreen;
      Switch prefLockscreen = ViewBindings.findChildViewById(rootView, id);
      if (prefLockscreen == null) {
        break missingId;
      }

      id = R.id.pref_memo;
      TextView prefMemo = ViewBindings.findChildViewById(rootView, id);
      if (prefMemo == null) {
        break missingId;
      }

      id = R.id.pref_notifplayer;
      Switch prefNotifplayer = ViewBindings.findChildViewById(rootView, id);
      if (prefNotifplayer == null) {
        break missingId;
      }

      id = R.id.pref_pb_bgc;
      Switch prefPbBgc = ViewBindings.findChildViewById(rootView, id);
      if (prefPbBgc == null) {
        break missingId;
      }

      id = R.id.pref_reset;
      Button prefReset = ViewBindings.findChildViewById(rootView, id);
      if (prefReset == null) {
        break missingId;
      }

      id = R.id.pref_rundam_list_size;
      EditText prefRundamListSize = ViewBindings.findChildViewById(rootView, id);
      if (prefRundamListSize == null) {
        break missingId;
      }

      id = R.id.pref_saikin_sisei;
      EditText prefSaikinSisei = ViewBindings.findChildViewById(rootView, id);
      if (prefSaikinSisei == null) {
        break missingId;
      }

      id = R.id.pref_saikin_tuika;
      EditText prefSaikinTuika = ViewBindings.findChildViewById(rootView, id);
      if (prefSaikinTuika == null) {
        break missingId;
      }

      return new SettingsActivityBinding((LinearLayout) rootView, headAria, prefBtRenkei,
          prefGyapless, prefListSimple, prefListupReset, prefLockscreen, prefMemo, prefNotifplayer,
          prefPbBgc, prefReset, prefRundamListSize, prefSaikinSisei, prefSaikinTuika);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

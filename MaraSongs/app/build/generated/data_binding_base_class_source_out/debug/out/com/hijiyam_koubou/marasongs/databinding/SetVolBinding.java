// Generated by view binder compiler. Do not edit!
package com.hijiyam_koubou.marasongs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hijiyam_koubou.marasongs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SetVolBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView ringVolText;

  @NonNull
  public final LinearLayout setvolroot;

  @NonNull
  public final TextView textView32;

  @NonNull
  public final TextView textViewm4;

  @NonNull
  public final SeekBar volSeek;

  private SetVolBinding(@NonNull LinearLayout rootView, @NonNull TextView ringVolText,
      @NonNull LinearLayout setvolroot, @NonNull TextView textView32, @NonNull TextView textViewm4,
      @NonNull SeekBar volSeek) {
    this.rootView = rootView;
    this.ringVolText = ringVolText;
    this.setvolroot = setvolroot;
    this.textView32 = textView32;
    this.textViewm4 = textViewm4;
    this.volSeek = volSeek;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SetVolBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SetVolBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.set_vol, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SetVolBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ringVolText;
      TextView ringVolText = ViewBindings.findChildViewById(rootView, id);
      if (ringVolText == null) {
        break missingId;
      }

      LinearLayout setvolroot = (LinearLayout) rootView;

      id = R.id.textView32;
      TextView textView32 = ViewBindings.findChildViewById(rootView, id);
      if (textView32 == null) {
        break missingId;
      }

      id = R.id.textViewm4;
      TextView textViewm4 = ViewBindings.findChildViewById(rootView, id);
      if (textViewm4 == null) {
        break missingId;
      }

      id = R.id.vol_seek;
      SeekBar volSeek = ViewBindings.findChildViewById(rootView, id);
      if (volSeek == null) {
        break missingId;
      }

      return new SetVolBinding((LinearLayout) rootView, ringVolText, setvolroot, textView32,
          textViewm4, volSeek);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

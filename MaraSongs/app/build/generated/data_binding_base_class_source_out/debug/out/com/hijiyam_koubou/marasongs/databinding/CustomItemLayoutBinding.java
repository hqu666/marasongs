// Generated by view binder compiler. Do not edit!
package com.hijiyam_koubou.marasongs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hijiyam_koubou.marasongs.ItemLayout;
import com.hijiyam_koubou.marasongs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomItemLayoutBinding implements ViewBinding {
  @NonNull
  private final ItemLayout rootView;

  @NonNull
  public final LinearLayout customItemView;

  @NonNull
  public final TextView descriptionView;

  @NonNull
  public final ImageView iconView;

  @NonNull
  public final TextView noView;

  @NonNull
  public final Button playBt;

  @NonNull
  public final Button pouseBt;

  @NonNull
  public final TextView titleView;

  private CustomItemLayoutBinding(@NonNull ItemLayout rootView,
      @NonNull LinearLayout customItemView, @NonNull TextView descriptionView,
      @NonNull ImageView iconView, @NonNull TextView noView, @NonNull Button playBt,
      @NonNull Button pouseBt, @NonNull TextView titleView) {
    this.rootView = rootView;
    this.customItemView = customItemView;
    this.descriptionView = descriptionView;
    this.iconView = iconView;
    this.noView = noView;
    this.playBt = playBt;
    this.pouseBt = pouseBt;
    this.titleView = titleView;
  }

  @Override
  @NonNull
  public ItemLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.custom_item_view;
      LinearLayout customItemView = ViewBindings.findChildViewById(rootView, id);
      if (customItemView == null) {
        break missingId;
      }

      id = R.id.descriptionView;
      TextView descriptionView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionView == null) {
        break missingId;
      }

      id = R.id.iconView;
      ImageView iconView = ViewBindings.findChildViewById(rootView, id);
      if (iconView == null) {
        break missingId;
      }

      id = R.id.noView;
      TextView noView = ViewBindings.findChildViewById(rootView, id);
      if (noView == null) {
        break missingId;
      }

      id = R.id.playBt;
      Button playBt = ViewBindings.findChildViewById(rootView, id);
      if (playBt == null) {
        break missingId;
      }

      id = R.id.pouseBt;
      Button pouseBt = ViewBindings.findChildViewById(rootView, id);
      if (pouseBt == null) {
        break missingId;
      }

      id = R.id.titleView;
      TextView titleView = ViewBindings.findChildViewById(rootView, id);
      if (titleView == null) {
        break missingId;
      }

      return new CustomItemLayoutBinding((ItemLayout) rootView, customItemView, descriptionView,
          iconView, noView, playBt, pouseBt, titleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

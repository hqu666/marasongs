// Generated by view binder compiler. Do not edit!
package com.hijiyam_koubou.marasongs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hijiyam_koubou.marasongs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LilicBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView currentFontSize;

  @NonNull
  public final TextView fontMax;

  @NonNull
  public final TextView fontMini;

  @NonNull
  public final SeekBar fontSizeSp;

  @NonNull
  public final ScrollView lyricSv;

  @NonNull
  public final TextView lyricTv;

  @NonNull
  public final ImageButton toImgBt;

  private LilicBinding(@NonNull LinearLayout rootView, @NonNull TextView currentFontSize,
      @NonNull TextView fontMax, @NonNull TextView fontMini, @NonNull SeekBar fontSizeSp,
      @NonNull ScrollView lyricSv, @NonNull TextView lyricTv, @NonNull ImageButton toImgBt) {
    this.rootView = rootView;
    this.currentFontSize = currentFontSize;
    this.fontMax = fontMax;
    this.fontMini = fontMini;
    this.fontSizeSp = fontSizeSp;
    this.lyricSv = lyricSv;
    this.lyricTv = lyricTv;
    this.toImgBt = toImgBt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LilicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LilicBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.lilic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LilicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.current_font_size;
      TextView currentFontSize = ViewBindings.findChildViewById(rootView, id);
      if (currentFontSize == null) {
        break missingId;
      }

      id = R.id.font_max;
      TextView fontMax = ViewBindings.findChildViewById(rootView, id);
      if (fontMax == null) {
        break missingId;
      }

      id = R.id.font_mini;
      TextView fontMini = ViewBindings.findChildViewById(rootView, id);
      if (fontMini == null) {
        break missingId;
      }

      id = R.id.font_size_sp;
      SeekBar fontSizeSp = ViewBindings.findChildViewById(rootView, id);
      if (fontSizeSp == null) {
        break missingId;
      }

      id = R.id.lyric_sv;
      ScrollView lyricSv = ViewBindings.findChildViewById(rootView, id);
      if (lyricSv == null) {
        break missingId;
      }

      id = R.id.lyric_tv;
      TextView lyricTv = ViewBindings.findChildViewById(rootView, id);
      if (lyricTv == null) {
        break missingId;
      }

      id = R.id.to_img_bt;
      ImageButton toImgBt = ViewBindings.findChildViewById(rootView, id);
      if (toImgBt == null) {
        break missingId;
      }

      return new LilicBinding((LinearLayout) rootView, currentFontSize, fontMax, fontMini,
          fontSizeSp, lyricSv, lyricTv, toImgBt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
